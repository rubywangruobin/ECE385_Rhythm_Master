module dropper_ten(input Reset, frame_clk, 
						 output [9:0] drop10X, drop10Y,
						 output [1599:0] arrow10);
	logic [9:0] arrow_X_Pos, arrow_Y_Pos, arrow_Y_Motion;
	 logic [11:0] counter;
    parameter [9:0] X_start=220;  // Center position on the X axis
    parameter [9:0] Y_start=100;  // Center position on the Y axis
    parameter [9:0] Y_Max=400;     // Bottommost point on the Y axis
	 logic finish_on;
	 always_ff @ (posedge Reset or posedge frame_clk )
    begin: Move_arrow
        if (Reset)  // Asynchronous Reset
        begin 
            arrow_Y_Motion <= 10'd0; //Ball_Y_Step;
				arrow_Y_Pos <= Y_start;
				arrow_X_Pos <= X_start;
				counter = 0;
				finish_on <= 1'b0;
        end
           
        else if(counter >= 90)
        begin 
				arrow_Y_Motion <= 1;
				
				 if ( (arrow_Y_Pos + 40) >= Y_Max )  // Ball is at the bottom edge, BOUNCE!
				 begin
					  finish_on <= 1'b1;
				 end
				 else
				 begin
					  arrow_Y_Pos <= (arrow_Y_Pos + arrow_Y_Motion);  // Update arrow position
					  counter = counter +1;
					  finish_on <= 1'b0;
				 end
			
		end  
		else
		begin
		counter = counter +1;
		finish_on <= 1'b0;
		end
    end
    assign drop5X = arrow_X_Pos;
   
    assign drop5Y = arrow_Y_Pos;
	 always_comb
	 begin
	 arrow5 <= 1'b0;
	 if(finish_on == 0)
	 begin
	 arrow5[336] <= 1'b1;
arrow5[337] <= 1'b1;
arrow5[338] <= 1'b1;
arrow5[339] <= 1'b1;
arrow5[340] <= 1'b1;
arrow5[341] <= 1'b1;
arrow5[376] <= 1'b1;
arrow5[377] <= 1'b1;
arrow5[378] <= 1'b1;
arrow5[379] <= 1'b1;
arrow5[380] <= 1'b1;
arrow5[381] <= 1'b1;
arrow5[416] <= 1'b1;
arrow5[417] <= 1'b1;
arrow5[418] <= 1'b1;
arrow5[419] <= 1'b1;
arrow5[420] <= 1'b1;
arrow5[421] <= 1'b1;
arrow5[456] <= 1'b1;
arrow5[457] <= 1'b1;
arrow5[458] <= 1'b1;
arrow5[459] <= 1'b1;
arrow5[460] <= 1'b1;
arrow5[461] <= 1'b1;
arrow5[496] <= 1'b1;
arrow5[497] <= 1'b1;
arrow5[498] <= 1'b1;
arrow5[499] <= 1'b1;
arrow5[500] <= 1'b1;
arrow5[501] <= 1'b1;
arrow5[536] <= 1'b1;
arrow5[537] <= 1'b1;
arrow5[538] <= 1'b1;
arrow5[539] <= 1'b1;
arrow5[540] <= 1'b1;
arrow5[541] <= 1'b1;
arrow5[576] <= 1'b1;
arrow5[577] <= 1'b1;
arrow5[578] <= 1'b1;
arrow5[579] <= 1'b1;
arrow5[580] <= 1'b1;
arrow5[581] <= 1'b1;
arrow5[616] <= 1'b1;
arrow5[617] <= 1'b1;
arrow5[618] <= 1'b1;
arrow5[619] <= 1'b1;
arrow5[620] <= 1'b1;
arrow5[621] <= 1'b1;
arrow5[656] <= 1'b1;
arrow5[657] <= 1'b1;
arrow5[658] <= 1'b1;
arrow5[659] <= 1'b1;
arrow5[660] <= 1'b1;
arrow5[661] <= 1'b1;
arrow5[696] <= 1'b1;
arrow5[697] <= 1'b1;
arrow5[698] <= 1'b1;
arrow5[699] <= 1'b1;
arrow5[700] <= 1'b1;
arrow5[701] <= 1'b1;
arrow5[736] <= 1'b1;
arrow5[737] <= 1'b1;
arrow5[738] <= 1'b1;
arrow5[739] <= 1'b1;
arrow5[740] <= 1'b1;
arrow5[741] <= 1'b1;
arrow5[776] <= 1'b1;
arrow5[777] <= 1'b1;
arrow5[778] <= 1'b1;
arrow5[779] <= 1'b1;
arrow5[780] <= 1'b1;
arrow5[781] <= 1'b1;
arrow5[810] <= 1'b1;
arrow5[811] <= 1'b1;
arrow5[812] <= 1'b1;
arrow5[813] <= 1'b1;
arrow5[814] <= 1'b1;
arrow5[815] <= 1'b1;
arrow5[816] <= 1'b1;
arrow5[817] <= 1'b1;
arrow5[818] <= 1'b1;
arrow5[819] <= 1'b1;
arrow5[820] <= 1'b1;
arrow5[821] <= 1'b1;
arrow5[822] <= 1'b1;
arrow5[823] <= 1'b1;
arrow5[824] <= 1'b1;
arrow5[825] <= 1'b1;
arrow5[826] <= 1'b1;
arrow5[827] <= 1'b1;
arrow5[850] <= 1'b1;
arrow5[851] <= 1'b1;
arrow5[852] <= 1'b1;
arrow5[853] <= 1'b1;
arrow5[854] <= 1'b1;
arrow5[855] <= 1'b1;
arrow5[856] <= 1'b1;
arrow5[857] <= 1'b1;
arrow5[858] <= 1'b1;
arrow5[859] <= 1'b1;
arrow5[860] <= 1'b1;
arrow5[861] <= 1'b1;
arrow5[862] <= 1'b1;
arrow5[863] <= 1'b1;
arrow5[864] <= 1'b1;
arrow5[865] <= 1'b1;
arrow5[866] <= 1'b1;
arrow5[867] <= 1'b1;
arrow5[892] <= 1'b1;
arrow5[893] <= 1'b1;
arrow5[894] <= 1'b1;
arrow5[895] <= 1'b1;
arrow5[896] <= 1'b1;
arrow5[897] <= 1'b1;
arrow5[898] <= 1'b1;
arrow5[899] <= 1'b1;
arrow5[900] <= 1'b1;
arrow5[901] <= 1'b1;
arrow5[902] <= 1'b1;
arrow5[903] <= 1'b1;
arrow5[904] <= 1'b1;
arrow5[905] <= 1'b1;
arrow5[932] <= 1'b1;
arrow5[933] <= 1'b1;
arrow5[934] <= 1'b1;
arrow5[935] <= 1'b1;
arrow5[936] <= 1'b1;
arrow5[937] <= 1'b1;
arrow5[938] <= 1'b1;
arrow5[939] <= 1'b1;
arrow5[940] <= 1'b1;
arrow5[941] <= 1'b1;
arrow5[942] <= 1'b1;
arrow5[943] <= 1'b1;
arrow5[944] <= 1'b1;
arrow5[945] <= 1'b1;
arrow5[974] <= 1'b1;
arrow5[975] <= 1'b1;
arrow5[976] <= 1'b1;
arrow5[977] <= 1'b1;
arrow5[978] <= 1'b1;
arrow5[979] <= 1'b1;
arrow5[980] <= 1'b1;
arrow5[981] <= 1'b1;
arrow5[982] <= 1'b1;
arrow5[983] <= 1'b1;
arrow5[1014] <= 1'b1;
arrow5[1015] <= 1'b1;
arrow5[1016] <= 1'b1;
arrow5[1017] <= 1'b1;
arrow5[1018] <= 1'b1;
arrow5[1019] <= 1'b1;
arrow5[1020] <= 1'b1;
arrow5[1021] <= 1'b1;
arrow5[1022] <= 1'b1;
arrow5[1023] <= 1'b1;
arrow5[1056] <= 1'b1;
arrow5[1057] <= 1'b1;
arrow5[1058] <= 1'b1;
arrow5[1059] <= 1'b1;
arrow5[1060] <= 1'b1;
arrow5[1061] <= 1'b1;
arrow5[1096] <= 1'b1;
arrow5[1097] <= 1'b1;
arrow5[1098] <= 1'b1;
arrow5[1099] <= 1'b1;
arrow5[1100] <= 1'b1;
arrow5[1101] <= 1'b1;
arrow5[1138] <= 1'b1;
arrow5[1139] <= 1'b1;
arrow5[1178] <= 1'b1;
arrow5[1179] <= 1'b1;




	 end
   else
		 arrow5 <= 1'b0;
end
endmodule